#include <stdio.h>
#include <stdlib.h>

typedef struct {
    int key;
    int value;
} HashItem;

int* twoSum(int* nums, int numsSize, int target, int* returnSize) {
    HashItem* hashTable = malloc(sizeof(HashItem) * numsSize);
    int* result = malloc(sizeof(int) * 2);
    *returnSize = 2;

    for (int i = 0; i < numsSize; i++) {
        int complement = target - nums[i];
        for (int j = 0; j < i; j++) {
            if (hashTable[j].key == complement) {
                result[0] = hashTable[j].value;
                result[1] = i;
                free(hashTable);
                return result;
            }
        }
        hashTable[i].key = nums[i];
        hashTable[i].value = i;
    }

    free(hashTable);
    return NULL;
}
